<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pboxClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>